# Generated by Django 4.2.11 on 2024-08-01 11:40

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.files.storage
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Member",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "titre",
                    models.CharField(
                        choices=[("M.", "M."), ("Mme", "Mme")], max_length=5
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=200, primary_key=True, serialize=False
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        default="/static/polls/img/undraw_profile.svg",
                        storage=django.core.files.storage.FileSystemStorage(
                            location="/static/polls/img"
                        ),
                        upload_to="",
                    ),
                ),
                (
                    "president",
                    models.BooleanField(default=True, verbose_name="président"),
                ),
                (
                    "tresorier",
                    models.BooleanField(default=True, verbose_name="tresorier"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="AvenantConventionEtude",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("numero", models.IntegerField()),
                ("date_signature", models.DateField(blank=True, null=True)),
                ("remarque", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="AvenantRDM",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("numero", models.IntegerField()),
                ("date_signature", models.DateField(blank=True, null=True)),
                ("remarque", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom_societe", models.CharField(max_length=200)),
                ("raison_sociale", models.CharField(max_length=150)),
                ("rue", models.CharField(max_length=300)),
                ("ville", models.CharField(max_length=100)),
                ("code_postal", models.CharField(max_length=20)),
                ("country", models.CharField(max_length=100)),
                (
                    "logo",
                    models.ImageField(
                        default="media/polls/Logo_Ecole_des_Ponts_ParisTech.svg.png",
                        upload_to="polls/",
                    ),
                ),
                ("remarque", models.TextField(blank=True, default="", null=True)),
                ("description", models.TextField(max_length=500, null=True)),
                (
                    "secteur",
                    models.CharField(
                        choices=[
                            ("INDUSTRIE", "Industrie"),
                            ("DISTRIBUTION", "Distribution"),
                            ("SECTEUR_PUBLIC", "Secteur Public"),
                            ("CONSEIL", "Conseil"),
                            ("TRANSPORT", "Transport"),
                            ("NUMERIQUE", "Numerique"),
                            ("BTP", "BTP"),
                            ("AUTRE", "Autre"),
                        ],
                        default="SECTEUR_PUBLIC",
                        help_text="Sélectionnez le secteur d'activité du client.",
                        max_length=20,
                    ),
                ),
                (
                    "_type",
                    models.CharField(
                        choices=[
                            ("GRANDE_ENTREPRISE", "Grande entreprise"),
                            ("SECTEUR_PUBLIC", "Secteur Public"),
                            ("START_UP_ET_TPE", "Start-up et TPE"),
                            ("PME", "Petite et moyenne entreprise"),
                            ("ETI", "Entreprise de taille intermédiaire"),
                            ("ASSOCIATION", "Association"),
                        ],
                        default="SECTEUR_PUBLIC",
                        help_text="Sélectionnez le type d'entreprise.",
                        max_length=20,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Etude",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("titre", models.CharField(max_length=200)),
                ("numero", models.IntegerField(blank=True, null=True)),
                ("description", models.TextField(blank=True, max_length=500)),
                ("problematique", models.TextField(blank=True, max_length=500)),
                (
                    "debut",
                    models.DateField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("frais_dossier", models.FloatField(default=0)),
                ("tva_pourcentage", models.FloatField(default=20)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("EN_NEGOCIATION", "En négociation"),
                            ("EN_COURS", "En cours"),
                            ("TERMINEE", "Terminée"),
                        ],
                        default="EN_NEGOCIATION",
                        max_length=15,
                    ),
                ),
                (
                    "type_convention",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Convention cadre", "Cadre"),
                            ("Convention d'étude", "Etude"),
                        ],
                        max_length=30,
                        verbose_name="Type de convention",
                    ),
                ),
                ("id_url", models.UUIDField()),
                (
                    "date_debut_recrutement",
                    models.DateField(
                        blank=True, null=True, verbose_name="Debut du recrutement"
                    ),
                ),
                (
                    "date_fin_recrutement",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fin du recrutement"
                    ),
                ),
                ("remarque", models.TextField(blank=True, default="", null=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.client"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JE",
            fields=[
                ("nom", models.CharField(max_length=200)),
                ("raison_sociale", models.CharField(max_length=200)),
                ("rue", models.CharField(max_length=200)),
                ("ville", models.CharField(max_length=100)),
                ("code_postal", models.CharField(max_length=10)),
                (
                    "siret",
                    models.CharField(
                        max_length=14,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[0-9]+$", "This field must only contain digits"
                            ),
                            django.core.validators.MinLengthValidator(
                                14, "This field must contain exactly 14 characters."
                            ),
                        ],
                    ),
                ),
                (
                    "APE",
                    models.CharField(
                        max_length=5,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[0-9]{4}[A-Za-z]$", "The expected format is 0000A."
                            )
                        ],
                    ),
                ),
                (
                    "TVA",
                    models.CharField(
                        max_length=13,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Za-z]{2}[0-9]{11}$",
                                "The expected format is 2 letters and 11 digits",
                            ),
                            django.core.validators.MinLengthValidator(
                                13, "This field must contain exactly 13 characters."
                            ),
                        ],
                    ),
                ),
                (
                    "IBAN",
                    models.CharField(
                        max_length=34,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Z0-9]+$", "Special characters are not allowed."
                            )
                        ],
                    ),
                ),
                (
                    "BIC",
                    models.CharField(
                        max_length=34,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Z0-9]+$", "Special characters are not allowed."
                            )
                        ],
                    ),
                ),
                ("check_order", models.CharField(max_length=50)),
                (
                    "logo",
                    models.ImageField(
                        storage=django.core.files.storage.FileSystemStorage(
                            location="/static/polls/img"
                        ),
                        upload_to="",
                    ),
                ),
                (
                    "chiffres_affaires",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("base_urssaf", models.FloatField(default=46.6)),
                ("taux_ATMP", models.FloatField(default=0.66)),
                ("taux_cotisations", models.FloatField(default=29.9)),
            ],
        ),
        migrations.CreateModel(
            name="Phase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("debut_relatif", models.IntegerField(default=0)),
                ("duree_semaine", models.IntegerField(default=2)),
                ("date_debut", models.DateField(default=datetime.date.today)),
                ("date_fin", models.DateField(default=datetime.date.today)),
                ("titre", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, max_length=5000)),
                ("nb_JEH", models.IntegerField()),
                ("montant_HT_par_JEH", models.FloatField()),
                ("numero", models.IntegerField()),
                ("supprimee", models.BooleanField(default=False)),
                (
                    "etude",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="phases",
                        to="polls.etude",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SuppressionPhase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "avenant_ce",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="phases_supprimees",
                        to="polls.avenantconventionetude",
                    ),
                ),
                (
                    "phase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="suppression",
                        to="polls.phase",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "titre",
                    models.CharField(
                        choices=[("M.", "M."), ("Mme", "Mme")], max_length=5
                    ),
                ),
                ("first_name", models.CharField(max_length=200)),
                ("last_name", models.CharField(max_length=200)),
                ("mail", models.EmailField(max_length=200)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("adress", models.CharField(max_length=300, null=True)),
                (
                    "ville",
                    models.CharField(
                        default="Champs-sur-Marne", max_length=300, null=True
                    ),
                ),
                (
                    "code_postal",
                    models.CharField(default="77420", max_length=10, null=True),
                ),
                ("country", models.CharField(max_length=100, null=True)),
                ("promotion", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "departement",
                    models.CharField(
                        choices=[
                            ("IMI", "IMI"),
                            ("SEGF", "SEGF"),
                            ("GMM", "GMM"),
                            ("1A", "1A"),
                            ("GCC", "GCC"),
                            ("VET", "VET"),
                            ("AUTRE", "Autre"),
                        ],
                        default="AUTRE",
                        max_length=20,
                    ),
                ),
                (
                    "numero_ss",
                    models.CharField(
                        default="0",
                        max_length=14,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[0-9]+$", "This field must only contain digits"
                            )
                        ],
                    ),
                ),
                (
                    "je",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polls.je",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Representant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "titre",
                    models.CharField(
                        choices=[("M.", "M."), ("Mme", "Mme")], max_length=5
                    ),
                ),
                ("first_name", models.CharField(max_length=200)),
                ("last_name", models.CharField(max_length=200)),
                ("mail", models.EmailField(max_length=200)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("remarque", models.TextField(blank=True, default="RAS", null=True)),
                ("fonction", models.CharField(max_length=100)),
                ("contact_recent", models.BooleanField(default=False)),
                ("date_mail", models.DateField(blank=True, null=True)),
                (
                    "contenu_mail",
                    models.CharField(
                        default=" Bonjour {{titre}} {{last_name}}, Je me permets de vous contacter au nom de la Junior Entrprise des Ponts. J'ai remarqué que nous avons effectué une mission pour vous il y a deux ans...",
                        max_length=5000,
                        null=True,
                    ),
                ),
                ("date_reponse", models.DateField(blank=True, null=True)),
                (
                    "contenu_reponse",
                    models.CharField(default="rien", max_length=5000, null=True),
                ),
                (
                    "demarchage",
                    models.CharField(
                        choices=[
                            ("A_CONTACTER", "A contacter"),
                            ("ATTENTE_REPONSE", "Attente d'un retour"),
                            ("RELANCER", "A relancer"),
                            ("RETOUR_RECU", "Retour reçu"),
                            ("ETUDE_CREEE", "Étude créée"),
                        ],
                        default="A_CONTACTER",
                        max_length=40,
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="representants",
                        to="polls.client",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RDM",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_signature", models.DateField(blank=True, null=True)),
                ("remarque", models.TextField(blank=True, null=True)),
                (
                    "eleve",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rdm",
                        to="polls.student",
                    ),
                ),
                (
                    "etude",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rdm",
                        to="polls.etude",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PV",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("numero", models.IntegerField()),
                ("date_signature", models.DateField(blank=True, null=True)),
                ("remarque", models.TextField(blank=True, null=True)),
                ("date", models.DateField(default=datetime.date.today)),
                (
                    "etude",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pv",
                        to="polls.etude",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ParametresUtilisateur",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "param_statut_etude_ec",
                    models.BooleanField(default=True, verbose_name="En cours"),
                ),
                (
                    "param_statut_etude_ed",
                    models.BooleanField(default=False, verbose_name="En discussion"),
                ),
                (
                    "param_statut_etude_t",
                    models.BooleanField(default=False, verbose_name="Terminée"),
                ),
                (
                    "param_col_etude_numero",
                    models.BooleanField(default=True, verbose_name="Numéro"),
                ),
                (
                    "param_col_etude_titre",
                    models.BooleanField(default=True, verbose_name="Titre"),
                ),
                (
                    "param_col_etude_client",
                    models.BooleanField(default=True, verbose_name="Client"),
                ),
                (
                    "param_col_etude_responsable",
                    models.BooleanField(default=True, verbose_name="Responsable"),
                ),
                (
                    "param_col_etude_montant_HT",
                    models.BooleanField(default=False, verbose_name="Montant HT"),
                ),
                (
                    "param_col_etude_remarque",
                    models.BooleanField(default=True, verbose_name="Remarque"),
                ),
                (
                    "param_col_etude_avancement",
                    models.BooleanField(default=True, verbose_name="Avancement"),
                ),
                (
                    "membre",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parametres",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.CharField(max_length=500)),
                ("date_effet", models.DateField()),
                ("date_echeance", models.DateField()),
                ("href_redirect", models.CharField(blank=True, null=True)),
                (
                    "utilisateur",
                    models.ManyToManyField(
                        blank=True,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ModificationPhaseRDM",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nouveau_nombre_JEH", models.IntegerField()),
                (
                    "avenant_rdm",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="phases_modif_jeh",
                        to="polls.avenantrdm",
                    ),
                ),
                (
                    "phase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modif_jeh_rdm",
                        to="polls.phase",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ModificationJEHPhase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nouveau_nombre_JEH", models.IntegerField()),
                (
                    "avenant_ce",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="phases_modif_jeh",
                        to="polls.avenantconventionetude",
                    ),
                ),
                (
                    "phase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modif_jeh",
                        to="polls.phase",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ModificationDureePhase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nouvelle_duree", models.IntegerField()),
                (
                    "avenant_ce",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="phases_modif_duree",
                        to="polls.avenantconventionetude",
                    ),
                ),
                (
                    "phase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modif_duree",
                        to="polls.phase",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ModificationDebutPhase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nouveau_debut", models.IntegerField()),
                (
                    "avenant_ce",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="phases_modif_debut",
                        to="polls.avenantconventionetude",
                    ),
                ),
                (
                    "phase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modif_debut",
                        to="polls.phase",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("contenu", models.TextField(max_length=5000)),
                ("date", models.DateTimeField()),
                ("read", models.BooleanField(default=False)),
                (
                    "destinataire",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="destinataire",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "expediteur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="expediteur",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "je",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.je"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Facture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("facturé", models.BooleanField(default=False)),
                ("pourcentage_JEH", models.FloatField(default=30)),
                ("pourcentage_frais", models.FloatField(default=30)),
                (
                    "type_facture",
                    models.CharField(
                        choices=[
                            ("Facture d'acompte", "Acompte"),
                            ("Facture intermédiaire", "Intermediaire"),
                            ("Facture de solde", "Solde"),
                        ],
                        default="Facture d'acompte",
                        max_length=100,
                    ),
                ),
                ("numero_facture", models.IntegerField(default=5)),
                ("fac_frais", models.FloatField(default=0)),
                ("TVA_per", models.IntegerField(default=20)),
                ("date_emission", models.DateField(null=True)),
                ("date_echeance", models.DateField(null=True)),
                (
                    "etude",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="factures",
                        to="polls.etude",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="etude",
            name="client_interlocuteur",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="client_interlocuteur",
                to="polls.representant",
            ),
        ),
        migrations.AddField(
            model_name="etude",
            name="client_representant_legale",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="client_representant_legale",
                to="polls.representant",
            ),
        ),
        migrations.AddField(
            model_name="etude",
            name="je",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="polls.je"
            ),
        ),
        migrations.AddField(
            model_name="etude",
            name="resp_qualite",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="qualite_etudes",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="etude",
            name="responsable",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="responsable_etudes",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Devis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("numero", models.IntegerField()),
                ("date_signature", models.DateField(blank=True, null=True)),
                ("remarque", models.TextField(blank=True, null=True)),
                ("date", models.DateField(default=datetime.date.today)),
                (
                    "etude",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="devis",
                        to="polls.etude",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ConventionEtude",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_signature", models.DateField(blank=True, null=True)),
                ("remarque", models.TextField(blank=True, null=True)),
                (
                    "etude",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conventions_etude",
                        to="polls.etude",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ConventionCadre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_signature", models.DateField(blank=True, null=True)),
                ("remarque", models.TextField(blank=True, null=True)),
                (
                    "etude",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conventions_cadre",
                        to="polls.etude",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="client",
            name="je",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="polls.je"
            ),
        ),
        migrations.CreateModel(
            name="Candidature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("motivation", models.TextField(max_length=5000)),
                (
                    "eleve",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="candidatures",
                        to="polls.student",
                    ),
                ),
                (
                    "etude",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="candidatures",
                        to="polls.etude",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BonCommande",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("numero", models.IntegerField()),
                ("remarque", models.TextField(blank=True, null=True)),
                (
                    "convention_cadre",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bons_commande",
                        to="polls.conventioncadre",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AvenantRuptureRDM",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_signature", models.DateField(blank=True, null=True)),
                ("remarque", models.TextField(blank=True, null=True)),
                (
                    "rdm",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="avenants",
                        to="polls.rdm",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AvenantRuptureConventionEtude",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_signature", models.DateField(blank=True, null=True)),
                ("remarque", models.TextField(blank=True, null=True)),
                (
                    "ce",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="avenants",
                        to="polls.conventionetude",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="avenantrdm",
            name="rdm",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="avenants_modification",
                to="polls.rdm",
            ),
        ),
        migrations.AddField(
            model_name="avenantconventionetude",
            name="ce",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="avenants_modification",
                to="polls.conventionetude",
            ),
        ),
        migrations.CreateModel(
            name="AssignationJEH",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pourcentage_retribution", models.FloatField()),
                ("nombre_JEH", models.IntegerField()),
                (
                    "eleve",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.student"
                    ),
                ),
                (
                    "phase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.phase"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="member",
            name="je",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="polls.je"
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="student",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="polls.student",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
