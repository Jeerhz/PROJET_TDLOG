# Generated by Django 5.0.2 on 2024-03-01 15:00

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.files.storage
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models
from polls.models import JE


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_societe', models.CharField(max_length=200)),
                ('raison_sociale', models.CharField(max_length=150)),
                ('rue', models.CharField(max_length=300)),
                ('ville', models.CharField(max_length=100)),
                ('code_postal', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=100)),
                ('titre_representant', models.CharField(choices=[('M.', 'M.'), ('Mme', 'Mme')], max_length=5)),
                ('nom_representant', models.CharField(max_length=100)),
                ('fonction_representant', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='JE',
            fields=[
                ('nom', models.CharField(max_length=200)),
                ('raison_sociale', models.CharField(max_length=200)),
                ('rue', models.CharField(max_length=200)),
                ('ville', models.CharField(max_length=100)),
                ('code_postal', models.CharField(max_length=10)),
                ('siret', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator('^[0-9]+$', 'This field must only contain digits'), django.core.validators.MinLengthValidator(14, 'This field must contain exactly 14 characters.')])),
                ('APE', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^[0-9]{4}[A-Za-z]$', 'The expected format is 0000A.')])),
                ('TVA', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator('^[A-Za-z]{2}[0-9]{11}$', 'The expected format is 2 letters and 11 digits'), django.core.validators.MinLengthValidator(13, 'This field must contain exactly 13 characters.')])),
                ('IBAN', models.CharField(max_length=34, validators=[django.core.validators.RegexValidator('^[A-Z0-9]+$', 'Special characters are not allowed.')])),
                ('BIC', models.CharField(max_length=34, validators=[django.core.validators.RegexValidator('^[A-Z0-9]+$', 'Special characters are not allowed.')])),
                ('check_order', models.CharField(max_length=50)),
                ('logo', models.ImageField(storage=django.core.files.storage.FileSystemStorage(location='/static/polls/img'), upload_to='')),
                ('chiffres_affaires', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0)])),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('titre', models.CharField(choices=[('M.', 'M.'), ('Mme', 'Mme')], max_length=5)),
                ('email', models.EmailField(max_length=200, primary_key=True, serialize=False)),
                ('photo', models.ImageField(default='/static/polls/img/undraw_profile.svg', storage=django.core.files.storage.FileSystemStorage(location='/static/polls/img'), upload_to='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('je', models.ForeignKey(default=JE.objects.get(pk='bab6b8bec2744faeb6343c6a40968534'), on_delete=django.db.models.deletion.CASCADE, to='polls.je')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Etude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('numero', models.CharField(max_length=10)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('begin', models.DateField()),
                ('end', models.DateField()),
                ('frais_dossier', models.FloatField(default=0)),
                ('status', models.CharField(choices=[('EN_NEGOCIATION', 'En négociation'), ('EN_COURS', 'En cours'), ('TERMINEE', 'Terminée')], default='EN_NEGOCIATION', max_length=15)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.client')),
                ('responsable', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('je', models.ForeignKey(default=JE.objects.get(pk='bab6b8bec2744faeb6343c6a40968534'), on_delete=django.db.models.deletion.CASCADE, to='polls.je')),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='je',
            field=models.ForeignKey(default=JE.objects.get(pk='bab6b8bec2744faeb6343c6a40968534'), on_delete=django.db.models.deletion.CASCADE, to='polls.je'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField(max_length=5000)),
                ('date', models.DateTimeField()),
                ('read', models.BooleanField(default=False)),
                ('destinataire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destinataire', to=settings.AUTH_USER_MODEL)),
                ('expediteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expediteur', to=settings.AUTH_USER_MODEL)),
                ('je', models.ForeignKey(default=JE.objects.get(pk='bab6b8bec2744faeb6343c6a40968534'), on_delete=django.db.models.deletion.CASCADE, to='polls.je')),
            ],
        ),
        migrations.CreateModel(
            name='Phase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant_JEH', models.FloatField()),
                ('nombre_JEH', models.IntegerField()),
                ('numero', models.IntegerField()),
                ('etude', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.etude')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('mail', models.EmailField(max_length=200)),
                ('phone_number', models.CharField(blank=True, max_length=200)),
                ('adress', models.CharField(max_length=300)),
                ('country', models.CharField(max_length=100)),
                ('promotion', models.CharField(blank=True, max_length=200)),
                ('je', models.ForeignKey(default=JE.objects.get(pk='bab6b8bec2744faeb6343c6a40968534'), on_delete=django.db.models.deletion.CASCADE, to='polls.je')),
            ],
        ),
        migrations.AddField(
            model_name='etude',
            name='students',
            field=models.ManyToManyField(blank=True, to='polls.student'),
        ),
        migrations.CreateModel(
            name='AssignationJEH',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pourcentage_retribution', models.FloatField()),
                ('nombre_JEH', models.IntegerField()),
                ('phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.phase')),
                ('eleve', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='polls.student')),
            ],
        ),
        migrations.AddField(
            model_name='member',
            name='student',
            field=models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to='polls.student'),
        ),
    ]
