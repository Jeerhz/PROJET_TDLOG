# Generated by Django 4.2.11 on 2024-10-05 14:02

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('titre', models.CharField(choices=[('M.', 'M.'), ('Mme', 'Mme')], max_length=5)),
                ('email', models.EmailField(max_length=200, primary_key=True, serialize=False)),
                ('photo', models.ImageField(default='/static/polls/img/undraw_profile.svg', upload_to='static/polls/img/')),
                ('poste', models.CharField(blank=True, choices=[('PRESIDENT', 'président'), ('VICE_PRESIDENT', 'vice-président'), ('TRESORIER', 'Trésorier'), ('VICE_TRESORIER', 'vice-trésorier'), ('SECRETAIRE_GENERALE', 'secrétaire générale'), ('CHEF_DE_PROJET', 'chef de projet'), ('DIRECTEUR_COMMERCIALE', 'directeur commerciale'), ('DIRECTEUR_PROJET', 'directeur projet'), ('DSI', 'DSI'), ('RESPONSABLE_QUALITE', 'responsable_qualite'), ('DIRECTEUR_COMMUNICATION', 'directeur communication'), ('DIRECTEUR_RSE', 'directeur RSE'), ('INDEFINI', 'Indéfini')], max_length=40, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AvenantConventionEtude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField()),
                ('ancien_frais_dossier', models.FloatField(blank=True, null=True)),
                ('nouveau_frais_dossier', models.FloatField(blank=True, null=True)),
                ('date_signature', models.DateField(blank=True, null=True)),
                ('objet', models.TextField(blank=True, null=True)),
                ('avenant_budget', models.BooleanField(blank=True, default=False, null=True)),
                ('avenant_delais', models.BooleanField(blank=True, default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AvenantRDM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField()),
                ('date_signature', models.DateField(blank=True, null=True)),
                ('remarque', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_societe', models.CharField(max_length=200)),
                ('raison_sociale', models.CharField(max_length=150)),
                ('rue', models.CharField(max_length=300)),
                ('ville', models.CharField(max_length=100)),
                ('code_postal', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=100, verbose_name='pays')),
                ('logo', models.ImageField(default='media/polls/Logo_Ecole_des_Ponts_ParisTech.svg.png', upload_to='static/polls/img/')),
                ('remarque', models.TextField(blank=True, default='', null=True)),
                ('description', models.TextField(max_length=10000, null=True)),
                ('secteur', models.CharField(choices=[('INDUSTRIE', 'Industrie'), ('DISTRIBUTION', 'Distribution'), ('SECTEUR_PUBLIC', 'Secteur Public'), ('CONSEIL', 'Conseil'), ('TRANSPORT', 'Transport'), ('NUMERIQUE', 'Numerique'), ('BTP', 'BTP'), ('AUTRE', 'Autre')], default='SECTEUR_PUBLIC', help_text="Sélectionnez le secteur d'activité du client.", max_length=20)),
                ('type', models.CharField(choices=[('GRANDE_ENTREPRISE', 'Grande entreprise'), ('SECTEUR_PUBLIC', 'Secteur Public'), ('START_UP_ET_TPE', 'Start-up et TPE'), ('PME', 'Petite et moyenne entreprise'), ('ETI', 'Entreprise de taille intermédiaire'), ('ASSOCIATION', 'Association')], default='SECTEUR_PUBLIC', help_text="Sélectionnez le type d'entreprise.", max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Etude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=500)),
                ('numero', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, max_length=10000)),
                ('problematique', models.TextField(blank=True, max_length=500)),
                ('debut', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('frais_dossier', models.FloatField(default=0, verbose_name='frais de dossier')),
                ('taux_tva', models.FloatField(default=20, verbose_name='% TVA')),
                ('status', models.CharField(choices=[('EN_NEGOCIATION', 'En négociation'), ('EN_COURS', 'En cours'), ('TERMINEE', 'Terminée')], default='EN_NEGOCIATION', max_length=15)),
                ('type_convention', models.CharField(blank=True, choices=[('Convention cadre', 'Cadre'), ("Convention d'étude", 'Etude')], max_length=30, verbose_name='Type de convention')),
                ('mandat', models.CharField(blank=True, choices=[('025', '025'), ('026', '026'), ('027', '027')], default='026', max_length=30, verbose_name='mandat')),
                ('id_url', models.UUIDField()),
                ('date_debut_recrutement', models.DateField(blank=True, null=True, verbose_name='Debut du recrutement')),
                ('date_fin_recrutement', models.DateField(blank=True, null=True, verbose_name='Fin du recrutement')),
                ('remarque', models.TextField(blank=True, default='', null=True)),
                ('raison_contact', models.TextField(blank=True, default='', null=True)),
                ('contexte', models.TextField(blank=True, default='', null=True)),
                ('objectifs', models.TextField(blank=True, default='', null=True)),
                ('periode_de_garantie', models.IntegerField(default=90)),
                ('methodologie', models.TextField(blank=True, default='', null=True)),
                ('element_a_fournir', models.TextField(blank=True, default='', null=True, verbose_name='éléments à fournir du client')),
                ('paragraphe_intervenant_devis', models.TextField(default="Pour réaliser votre étude, nous rechercherons un ou des étudiants de l’École des Ponts ParisTech. Les cours dispensés à l’École tel(s) que [exemples(s) de cours qui peuvent être utile pour réaliser la mission], apportent aux étudiants les outils nécessaires pour [ce en quoi l'étude va consister]. Ils auront donc les connaissances requises pour [ce que veut le client].")),
                ('cahier_des_charges', models.JSONField(default=dict)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.client')),
            ],
        ),
        migrations.CreateModel(
            name='JE',
            fields=[
                ('nom', models.CharField(max_length=200)),
                ('raison_sociale', models.CharField(max_length=200)),
                ('rue', models.CharField(max_length=200)),
                ('ville', models.CharField(max_length=100)),
                ('code_postal', models.CharField(max_length=10)),
                ('siret', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator('^[0-9]+$', 'This field must only contain digits'), django.core.validators.MinLengthValidator(14, 'This field must contain exactly 14 characters.')])),
                ('APE', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^[0-9]{4}[A-Za-z]$', 'The expected format is 0000A.')])),
                ('TVA', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator('^[A-Za-z]{2}[0-9]{11}$', 'The expected format is 2 letters and 11 digits'), django.core.validators.MinLengthValidator(13, 'This field must contain exactly 13 characters.')])),
                ('IBAN', models.CharField(max_length=34, validators=[django.core.validators.RegexValidator('^[A-Z0-9]+$', 'Special characters are not allowed.')])),
                ('BIC', models.CharField(max_length=34, validators=[django.core.validators.RegexValidator('^[A-Z0-9]+$', 'Special characters are not allowed.')])),
                ('check_order', models.CharField(max_length=50)),
                ('logo', models.ImageField(upload_to='static/polls/img/')),
                ('chiffres_affaires', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0)])),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('base_urssaf', models.FloatField(default=46.6)),
                ('taux_ATMP', models.FloatField(default=0.66)),
                ('taux_cotisations', models.FloatField(default=29.9)),
            ],
        ),
        migrations.CreateModel(
            name='Phase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debut_relatif', models.IntegerField(default=0)),
                ('duree_semaine', models.IntegerField(default=2)),
                ('date_debut', models.DateField(default=datetime.date.today)),
                ('date_fin', models.DateField(default=datetime.date.today)),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, max_length=5000)),
                ('nb_JEH', models.IntegerField()),
                ('montant_HT_par_JEH', models.FloatField()),
                ('numero', models.IntegerField()),
                ('supprimee', models.BooleanField(default=False)),
                ('etude', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etude', to='polls.etude')),
            ],
        ),
        migrations.CreateModel(
            name='SuppressionPhase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avenant_ce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phases_supprimees', to='polls.avenantconventionetude')),
                ('phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suppression', to='polls.phase')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(choices=[('M.', 'M.'), ('Mme', 'Mme')], max_length=5)),
                ('first_name', models.CharField(max_length=200, verbose_name='prénom')),
                ('last_name', models.CharField(max_length=200, verbose_name='nom')),
                ('mail', models.EmailField(max_length=200)),
                ('phone_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='téléphone')),
                ('adress', models.CharField(max_length=300, null=True, verbose_name='rue')),
                ('ville', models.CharField(default='Champs-sur-Marne', max_length=300, null=True)),
                ('code_postal', models.CharField(default='77420', max_length=10, null=True)),
                ('country', models.CharField(max_length=100, null=True, verbose_name='pays')),
                ('promotion', models.CharField(choices=[('2022', '2022'), ('2023', '2023'), ('2024', '2024'), ('2025', '2025'), ('2026', '2026'), ('2027', '2027'), ('DD', 'Double-diplome'), ('MS', 'Master Spécialisé'), ('AUTRE', 'Autre')], default='2026', max_length=200)),
                ('departement', models.CharField(choices=[('IMI', 'IMI'), ('SEGF', 'SEGF'), ('GMM', 'GMM'), ('1A', '1A'), ('GCC', 'GCC'), ('VET', 'VET'), ('GI', 'GI'), ('AUTRE', 'Autre')], default='AUTRE', max_length=20)),
                ('numero_ss', models.CharField(default='0', max_length=14, validators=[django.core.validators.RegexValidator('^[0-9]+$', 'This field must only contain digits')], verbose_name='n° de sécurité sociale')),
                ('remarque', models.TextField(blank=True, default='', null=True)),
                ('je', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.je')),
            ],
        ),
        migrations.CreateModel(
            name='Representant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(choices=[('M.', 'M.'), ('Mme', 'Mme')], max_length=5)),
                ('first_name', models.CharField(max_length=200, verbose_name='prénom')),
                ('last_name', models.CharField(max_length=200, verbose_name='nom')),
                ('mail', models.EmailField(max_length=200)),
                ('phone_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='téléphone')),
                ('remarque', models.TextField(blank=True, default='RAS', null=True)),
                ('fonction', models.CharField(max_length=100, null=True)),
                ('contact_recent', models.BooleanField(blank=True, default=False, null=True)),
                ('date_mail', models.DateField(blank=True, default=datetime.date(1747, 1, 1), null=True)),
                ('contenu_mail', models.CharField(blank=True, default=" Bonjour {{titre}} {{last_name}}, Je me permets de vous contacter au nom de la Junior Entrprise des Ponts. J'ai remarqué que nous avons effectué une mission pour vous il y a deux ans...", max_length=5000, null=True)),
                ('date_reponse', models.DateField(blank=True, default=datetime.date(1747, 1, 1), null=True)),
                ('contenu_reponse', models.CharField(blank=True, default='rien', max_length=5000, null=True)),
                ('demarchage', models.CharField(choices=[('A_CONTACTER', 'A contacter'), ('ATTENTE_REPONSE', "Attente d'un retour"), ('RELANCER', 'A relancer'), ('RETOUR_RECU', 'Retour reçu'), ('ETUDE_CREEE', 'Étude créée')], default='A_CONTACTER', max_length=40)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.client')),
            ],
        ),
        migrations.CreateModel(
            name='RDM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_signature', models.DateField(blank=True, null=True)),
                ('remarque', models.TextField(blank=True, null=True)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rdm', to='polls.student')),
                ('etude', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rdm', to='polls.etude')),
            ],
        ),
        migrations.CreateModel(
            name='PV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField()),
                ('date_signature', models.DateField(blank=True, null=True)),
                ('remarque', models.TextField(blank=True, null=True)),
                ('date', models.DateField(default=datetime.date.today)),
                ('etude', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pv', to='polls.etude')),
            ],
        ),
        migrations.CreateModel(
            name='ParametresUtilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('param_statut_etude_ec', models.BooleanField(default=True, verbose_name='En cours')),
                ('param_statut_etude_ed', models.BooleanField(default=True, verbose_name='En discussion')),
                ('param_statut_etude_t', models.BooleanField(default=True, verbose_name='Terminée')),
                ('param_col_etude_numero', models.BooleanField(default=True, verbose_name='Numéro')),
                ('param_col_etude_titre', models.BooleanField(default=True, verbose_name='Titre')),
                ('param_col_etude_client', models.BooleanField(default=True, verbose_name='Client')),
                ('param_col_etude_responsable', models.BooleanField(default=True, verbose_name='Responsable')),
                ('param_col_etude_montant_HT', models.BooleanField(default=False, verbose_name='Montant HT')),
                ('param_col_etude_remarque', models.BooleanField(default=True, verbose_name='Remarque')),
                ('param_col_etude_avancement', models.BooleanField(default=True, verbose_name='Avancement')),
                ('signature', models.TextField(blank=True, default='', max_length=200, verbose_name='Signature Mail')),
                ('membre', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='parametres', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=500)),
                ('date_effet', models.DateField()),
                ('date_echeance', models.DateField()),
                ('href_redirect', models.CharField(blank=True, null=True)),
                ('utilisateur', models.ManyToManyField(blank=True, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ModificationPhaseRDM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ancien_nombre_JEH', models.IntegerField()),
                ('nouveau_nombre_JEH', models.IntegerField()),
                ('avenant_rdm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phases_modif_jeh', to='polls.avenantrdm')),
                ('phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modif_jeh_rdm', to='polls.phase')),
            ],
        ),
        migrations.CreateModel(
            name='ModificationJEHPhase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ancien_nombre_JEH', models.IntegerField()),
                ('nouveau_nombre_JEH', models.IntegerField()),
                ('avenant_ce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phases_modif_jeh', to='polls.avenantconventionetude')),
                ('phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modif_jeh', to='polls.phase')),
            ],
        ),
        migrations.CreateModel(
            name='ModificationDureePhase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ancienne_duree', models.IntegerField()),
                ('nouvelle_duree', models.IntegerField()),
                ('avenant_ce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phases_modif_duree', to='polls.avenantconventionetude')),
                ('phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modif_duree', to='polls.phase')),
            ],
        ),
        migrations.CreateModel(
            name='ModificationDebutPhase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ancien_debut', models.IntegerField()),
                ('nouveau_debut', models.IntegerField()),
                ('avenant_ce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phases_modif_debut', to='polls.avenantconventionetude')),
                ('phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modif_debut', to='polls.phase')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField(max_length=5000)),
                ('date', models.DateTimeField()),
                ('read', models.BooleanField(default=False)),
                ('destinataire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destinataire', to=settings.AUTH_USER_MODEL)),
                ('expediteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expediteur', to=settings.AUTH_USER_MODEL)),
                ('je', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.je')),
            ],
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facturé', models.BooleanField(default=False)),
                ('pourcentage_JEH', models.FloatField(default=30)),
                ('pourcentage_frais', models.FloatField(default=30)),
                ('type_facture', models.CharField(choices=[("Facture d'acompte", 'Acompte'), ('Facture intermédiaire', 'Intermediaire'), ('Facture de solde', 'Solde')], default="Facture d'acompte", max_length=100)),
                ('numero_facture', models.IntegerField(default=5)),
                ('TVA_per', models.IntegerField(default=20)),
                ('date_emission', models.DateField(null=True)),
                ('date_echeance', models.DateField(null=True)),
                ('facture_pdf', models.FileField(blank=True, null=True, upload_to='factures/pdfs/')),
                ('etude', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='factures', to='polls.etude')),
            ],
        ),
        migrations.AddField(
            model_name='etude',
            name='client_interlocuteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_interlocuteur', to='polls.representant'),
        ),
        migrations.AddField(
            model_name='etude',
            name='client_representant_legale',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_representant_legale', to='polls.representant'),
        ),
        migrations.AddField(
            model_name='etude',
            name='je',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.je'),
        ),
        migrations.AddField(
            model_name='etude',
            name='resp_qualite',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qualite_etudes', to=settings.AUTH_USER_MODEL, verbose_name='qualité'),
        ),
        migrations.AddField(
            model_name='etude',
            name='responsable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsable_etudes', to=settings.AUTH_USER_MODEL, verbose_name='suiveur'),
        ),
        migrations.CreateModel(
            name='Devis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField()),
                ('date_signature', models.DateField(blank=True, null=True)),
                ('remarque', models.TextField(blank=True, null=True)),
                ('date', models.DateField(default=datetime.date.today)),
                ('etude', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devis', to='polls.etude')),
            ],
        ),
        migrations.CreateModel(
            name='CustomMailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(max_length=20000)),
                ('numero', models.IntegerField()),
                ('je', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mail_templates', to='polls.je')),
            ],
        ),
        migrations.CreateModel(
            name='ConventionEtude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_signature', models.DateField(blank=True, null=True)),
                ('remarque', models.TextField(blank=True, null=True)),
                ('etude', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conventions_etude', to='polls.etude')),
            ],
        ),
        migrations.CreateModel(
            name='ConventionCadre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_signature', models.DateField(blank=True, null=True)),
                ('remarque', models.TextField(blank=True, null=True)),
                ('etude', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conventions_cadre', to='polls.etude')),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='je',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.je'),
        ),
        migrations.CreateModel(
            name='Candidature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motivation', models.TextField(max_length=5000)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidatures', to='polls.student')),
                ('etude', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidatures', to='polls.etude')),
            ],
        ),
        migrations.CreateModel(
            name='BonCommande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField()),
                ('remarque', models.TextField(blank=True, null=True)),
                ('frais_dossier', models.FloatField(default=0, verbose_name='frais de dossier')),
                ('objectifs', models.TextField(blank=True, default='', null=True)),
                ('cahier_des_charges', models.JSONField(default=dict)),
                ('debut', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('acompte_pourcentage', models.IntegerField(default=30)),
                ('periode_de_garantie', models.IntegerField(default=90)),
                ('etude', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etude_bdc', to='polls.etude')),
            ],
        ),
        migrations.CreateModel(
            name='BA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=604)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ba', to='polls.student')),
            ],
        ),
        migrations.CreateModel(
            name='AvenantRuptureRDM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_signature', models.DateField(blank=True, null=True)),
                ('remarque', models.TextField(blank=True, null=True)),
                ('rdm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avenants', to='polls.rdm')),
            ],
        ),
        migrations.CreateModel(
            name='AvenantRuptureConventionEtude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_signature', models.DateField(blank=True, null=True)),
                ('remarque', models.TextField(blank=True, null=True)),
                ('ce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avenants', to='polls.conventionetude')),
            ],
        ),
        migrations.AddField(
            model_name='avenantrdm',
            name='rdm',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avenants_modification', to='polls.rdm'),
        ),
        migrations.AddField(
            model_name='avenantconventionetude',
            name='ce',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avenants_modification', to='polls.conventionetude'),
        ),
        migrations.CreateModel(
            name='AssociationPhaseBDC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bon_de_commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='associations_phase', to='polls.boncommande')),
                ('phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='associations_bdc', to='polls.phase')),
            ],
        ),
        migrations.CreateModel(
            name='AssociationFactureBDC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bon_de_commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='associations_facture', to='polls.boncommande')),
                ('facture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='associations_bdc_fac', to='polls.facture')),
            ],
        ),
        migrations.CreateModel(
            name='AssignationJEH',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pourcentage_retribution', models.FloatField()),
                ('nombre_JEH', models.IntegerField()),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.student')),
                ('phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.phase')),
            ],
        ),
        migrations.AddField(
            model_name='member',
            name='je',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.je'),
        ),
        migrations.AddField(
            model_name='member',
            name='student',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='member', to='polls.student'),
        ),
        migrations.AddField(
            model_name='member',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
